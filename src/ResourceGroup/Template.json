{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environmentCode": {
      "type": "string",
      "minLength": 4,
      "maxLength": 4,
      "allowedValues": [
        "test",
        "prod"
      ]
    },
    "websiteSkuName": {
      "type": "string",
      "defaultValue": "F1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and capacity. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "websiteSkuCapacity": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "maxValue": 1,
      "metadata": {
        "description": "Describes plan's instance count"
      }
    },
    "functionStorageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "burnformoneySqlDbCollation": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
    },
    "burnformoneySqlDbEdition": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard"
      ]
    },
    "burnformoneySqlDbRequestedServiceObjectiveName": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "S0",
        "S1",
        "S2"
      ],
      "metadata": {
        "description": "Describes the performance level for Edition"
      }
    },
    "sqlServerLogin": {
      "type": "string",
      "defaultValue": "sqladmin"
    },
    "sqlServerPassword": {
      "type": "securestring"
    },
    "strava.clientId": {
      "type": "securestring"
    },
    "strava.clientSecret": {
      "type": "securestring"
    },
    "sendGrid.apiKey": {
      "type": "securestring"
    },
    "email.athletesApprovalEmail": {
      "type": "string"
    },
    "cors.allowedOrigins": {
      "type": "array"
    }
  },
  "variables": {
    "applicationName": "burnformoney",
    "webSiteName": "[concat(variables('applicationName'), '-', parameters('environmentCode'))]",
    "websiteHostingPlanName": "[concat(variables('applicationName'), '-', parameters('environmentCode'))]",
    "functionAppName": "[concat(variables('applicationName'), 'func-', parameters('environmentCode'))]",
    "functionHostingPlanName": "[concat(variables('applicationName'), 'func-', parameters('environmentCode'))]",
    "functionStorageAccountName": "[concat(variables('applicationName'), 'func', parameters('environmentCode'))]",
    "functionStorageAccountId": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('functionStorageAccountName'))]",
    "sqlDbName": "[concat(variables('applicationName'), 'sqldb', parameters('environmentCode'))]",
    "sqlServerName": "[concat(variables('applicationName'), 'sqlserver', parameters('environmentCode'))]",
    "keyVaultName": "[concat(variables('applicationName'), 'kv', parameters('environmentCode'))]",
    "appInsightsName": "[concat(variables('applicationName'), 'ai', parameters('environmentCode'))]"
  },
  "resources": [
    {
      "apiVersion": "2015-08-01",
      "name": "[variables('websiteHostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "WebsiteHostingPlan"
      },
      "sku": {
        "name": "[parameters('websiteSkuName')]",
        "capacity": "[parameters('websiteSkuCapacity')]"
      },
      "properties": {
        "name": "[variables('websiteHostingPlanName')]"
      }
    },
    {
      "apiVersion": "2015-04-01",
      "name": "[variables('functionHostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "FunctionHostingPlan"
      },
      "properties": {
        "name": "[variables('functionHostingPlanName')]",
        "computeMode": "Dynamic",
        "sku": "Dynamic"
      }
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[variables('webSiteName')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "tags": {
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('websiteHostingPlanName'))]": "Resource",
        "displayName": "Website"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms/', variables('websiteHostingPlanName'))]"
      ],
      "properties": {
        "name": "[variables('webSiteName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('websiteHostingPlanName'))]"
      }
    },
    {
      "apiVersion": "2016-01-01",
      "name": "[variables('functionStorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "kind": "Storage",
      "sku": {
        "name": "[parameters('functionStorageAccountType')]"
      }
    },
    {
      "type": "microsoft.insights/components",
      "kind": "other",
      "name": "[variables('appInsightsName')]",
      "apiVersion": "2014-04-01",
      "location": "[resourceGroup().location]",
      "tags": {},
      "scale": null,
      "properties": {
        "ApplicationId": "[variables('appInsightsName')]"
      },
      "dependsOn": []
    },
    {
      "apiVersion": "2015-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('functionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('functionHostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('functionStorageAccountName'))]",
        "[resourceId('microsoft.insights/components', variables('appInsightsName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('functionHostingPlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('functionStorageAccountName'), ';AccountKey=', listKeys(variables('functionStorageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('functionStorageAccountName'), ';AccountKey=', listKeys(variables('functionStorageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('functionStorageAccountName'), ';AccountKey=', listKeys(variables('functionStorageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "beta"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "6.5.0"
            },
            {
              "name": "MSDEPLOY_RENAME_LOCKED_FILES",
              "value": "1"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(concat('microsoft.insights/components/', variables('appInsightsName'))).InstrumentationKey]"
            },
            {
              "name": "Strava.ClientId",
              "value": "[parameters('strava.clientId')]"
            },
            {
              "name": "Strava.ClientSecret",
              "value": "[parameters('strava.clientSecret')]"
            },
            {
              "name": "SendGrid.ApiKey",
              "value": "[parameters('sendGrid.apiKey')]"
            },
            {
              "name": "Email.AthletesApprovalEmail",
              "value": "[parameters('email.athletesApprovalEmail')]"
            },
            {
              "name": "WEB_HOST",
              "value": "[concat('https://', variables('functionAppName'), '.azurewebsites.net')]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "type": "config",
          "name": "connectionstrings",
          "dependsOn": [
            "[concat('Microsoft.Web/Sites/', variables('functionAppName'))]",
            "[concat('Microsoft.Storage/storageAccounts/', variables('functionStorageAccountName'))]",
            "[concat('Microsoft.Sql/servers/', variables('sqlServerName'))]"
          ],
          "properties": {
            "KeyVault.ConnectionString": {
              "type": "Custom",
              "value": "[concat('https://', variables('keyVaultName'), '.vault.azure.net/')]"
            }
          }
        }
      ]
    },
    {
      "comments": "Function App - Properties (CORS, etc)",
      "type": "Microsoft.Web/sites/config",
      "name": "[concat(variables('functionAppName'), '/web')]",
      "apiVersion": "2018-02-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipSecurityRestrictions": [
          {
            "ipAddress": "89.174.102.0/26",
            "priority": 110,
            "name": "Allow Making Waves"
          }
        ],
        "cors": {
          "allowedOrigins": "[parameters('cors.allowedOrigins')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
      ]
    },
    {
      "name": "[variables('sqlserverName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "apiVersion": "2014-04-01",
      "dependsOn": [],
      "tags": {
        "displayName": "burnformoneysqlserver"
      },
      "properties": {
        "administratorLogin": "[parameters('sqlServerLogin')]",
        "administratorLoginPassword": "[parameters('sqlServerPassword')]"
      },
      "resources": [
        {
          "name": "AllowAllWindowsAzureIps",
          "type": "firewallrules",
          "location": "[resourceGroup().location]",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('sqlserverName'))]"
          ],
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "0.0.0.0"
          }
        },
        {
          "name": "AllowPawelHome",
          "type": "firewallrules",
          "location": "[resourceGroup().location]",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('sqlserverName'))]"
          ],
          "properties": {
            "startIpAddress": "193.25.0.11",
            "endIpAddress": "193.25.0.11"
          }
        },
        {
          "name": "AllowMakingWaves",
          "type": "firewallrules",
          "location": "[resourceGroup().location]",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('sqlserverName'))]"
          ],
          "properties": {
            "startIpAddress": "89.174.102.0",
            "endIpAddress": "89.174.102.63"
          }
        },
        {
          "name": "[variables('sqlDbName')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('sqlserverName'))]"
          ],
          "tags": {
            "displayName": "burnformoneySqlDb"
          },
          "properties": {
            "collation": "[parameters('burnformoneySqlDbCollation')]",
            "edition": "[parameters('burnformoneySqlDbEdition')]",
            "maxSizeBytes": "1073741824",
            "requestedServiceObjectiveName": "[parameters('burnformoneySqlDbRequestedServiceObjectiveName')]"
          }
        }
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/accessPolicies",
      "name": "[concat(variables('keyVaultName'), '/add')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
      ],
      "apiVersion": "2016-10-01",
      "properties": {
        "accessPolicies": [
          {
            "tenantId": "[reference(concat('Microsoft.Web/sites/', variables('functionAppName')), '2015-08-01', 'Full').identity.tenantId]",
            "objectId": "[reference(concat('Microsoft.Web/sites/', variables('functionAppName')), '2015-08-01', 'Full').identity.principalId]",
            "permissions": {
              "keys": [ "get" ],
              "secrets": [ "get" ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyVaultName'), '/', 'SQLConnectionString')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "value": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('sqlDbName'), ';User Id=', parameters('sqlServerLogin'), ';Password=', parameters('sqlServerPassword'), ';')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('sqlserverName'))]"
      ]
    }
  ]
}